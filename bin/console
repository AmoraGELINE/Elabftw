#!/usr/bin/env php
<?php
/**
 * @author Nicolas CARPi <nico-git@deltablot.email>
 * @copyright 2012 Nicolas CARPi
 * @see https://www.elabftw.net Official website
 * @license AGPL-3.0
 * @package elabftw
 */
namespace Elabftw\Commands;

use Symfony\Component\Console\Application;
use function dirname;
use Elabftw\Storage\Cache;
use Elabftw\Elabftw\FsTools;
use Elabftw\Models\Config;
use Symfony\Component\Mailer\Mailer;
use Elabftw\Services\Email;
use Monolog\Handler\ErrorLogHandler;
use Monolog\Logger;
use Symfony\Component\Mailer\Transport;

require dirname(__DIR__) . '/vendor/autoload.php';

$Application = new Application();
$Config = Config::getConfig();
$Logger = new Logger('elabftw');
$Logger->pushHandler(new ErrorLogHandler());
$Email = new Email(
    new Mailer(Transport::fromDsn($Config->getDsn())),
    $Logger,
    $Config->configArr['mail_from'],
);

$Application->add(new InstallRedir());
$Application->add(new GenSecretKey());
$Application->add(new GenI18n4Js());
$Application->add(new CacheClear());
$Application->add(new CheckDatabase((int) $Config->configArr['schema']));
$Application->add(new CheckTsBalance((int) $Config->configArr['ts_balance'], $Email));
$Application->add(new CleanDatabase());
$Application->add(new ExportUser(new Cache()));
$Application->add(new ExportResources(new Cache()));
$Application->add(new ImportResources(new Cache()));
$Application->add(new ImportUser(new Cache()));
$Application->add(new UpdateDatabase());
$Application->add(new RevertSchema(FsTools::getFs(dirname(__DIR__) . '/src/sql')));
$Application->add(new UpdateTo3());
$Application->add(new UpdateTo34());
$Application->add(new SnapFingers());
$Application->add(new ForceSchema());
$Application->add(new GenCache());
$Application->add(new GenSchema(FsTools::getFs(dirname(__DIR__) . '/src/sql')));
$Application->add(new PruneRevisions());
$Application->add(new MfaCode());
$Application->add(new AddMissingLinks());
$Application->add(new SendNotifications($Email));
$Application->add(new TagsTeamsSync());
$Application->add(new PruneUploads());
$Application->add(new PruneExperiments());
$Application->add(new PruneItems());
$Application->add(new CheckUploads());
$Application->add(new MigrateUploads());
$Application->add(new ExperimentsTimestamp());

$Application->run();
